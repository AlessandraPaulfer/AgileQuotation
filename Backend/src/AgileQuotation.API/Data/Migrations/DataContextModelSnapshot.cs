// <auto-generated />
using System;
using AgileQuotation.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AgileQuotation.API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("AgileQuotation.API.Models.QuotationProduct", b =>
                {
                    b.Property<int>("QuotationProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BoardingDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CountBySKU")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastMonthValidate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("LastPurchase")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastSupplier")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("LastValidate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SKU")
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusProduct")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubBrand")
                        .HasColumnType("TEXT");

                    b.Property<string>("TheGroup")
                        .HasColumnType("TEXT");

                    b.Property<string>("TheSubGroup")
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeIndAtac")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeSKUPositive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeSituation")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeUnit")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnitBox")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Weigth")
                        .HasColumnType("TEXT");

                    b.HasKey("QuotationProductId");

                    b.ToTable("QuotationProduct");
                });

            modelBuilder.Entity("AgileQuotation.API.Models.QuotationSupplier", b =>
                {
                    b.Property<int>("QuotationSupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<bool>("State")
                        .HasColumnType("INTEGER");

                    b.HasKey("QuotationSupplierId");

                    b.ToTable("QuotationSupplier");
                });

            modelBuilder.Entity("QuotationProductQuotationSupplier", b =>
                {
                    b.Property<int>("ProductsQuotationProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SuppliersQuotationSupplierId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductsQuotationProductId", "SuppliersQuotationSupplierId");

                    b.HasIndex("SuppliersQuotationSupplierId");

                    b.ToTable("QuotationProductQuotationSupplier");
                });

            modelBuilder.Entity("QuotationProductQuotationSupplier", b =>
                {
                    b.HasOne("AgileQuotation.API.Models.QuotationProduct", null)
                        .WithMany()
                        .HasForeignKey("ProductsQuotationProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgileQuotation.API.Models.QuotationSupplier", null)
                        .WithMany()
                        .HasForeignKey("SuppliersQuotationSupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
